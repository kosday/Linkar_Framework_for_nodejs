File: Templates LkSendCommand

These templates will be used for the SendCommand function for the operations delivery.

Group: Template List

Topic: Conversion Template

	*XML template*
	--- Code
	<COMMAND NAME="CONVERSION">
		<TYPE>ICONV</TYPE>
		<CODE></CODE>
		<EXPRESSIONS></EXPRESSIONS>
		<CUSTOM_VARS></CUSTOM_VARS>
		<OUTPUT_FORMAT>MV</OUTPUT_FORMAT>
	</COMMAND>
	---

	*JSON template*
	--- Code
	{ "NAME" : "CONVERSION", "COMMAND" :
		{
			"TYPE" : "ICONV" ,
			"CODE" : "" ,
			"EXPRESSIONS" : "" ,
			"CUSTOM_VARS" : "" ,
			"OUTPUT_FORMAT" : "MV"
		}
	}
	---

Topic: Delete Template

	Delete Template for NOT recovery deleted item ID::

		*XML template*
			--- Code
			<COMMAND NAME="DELETE">
				<OPTIMISTIC_LOCK>False</OPTIMISTIC_LOCK>
				<RECOVER_RECORD_ID_TYPE>NONE</RECOVER_RECORD_ID_TYPE>
				<CUSTOM_VARS></CUSTOM_VARS>
				<INPUT_FORMAT>XML</INPUT_FORMAT>
				<OUTPUT_FORMAT>XML</OUTPUT_FORMAT>
				<FILE_NAME></FILE_NAME>
				<RECORDS>
					<RECORD>
						<LKITEMID></LKITEMID>
						<ORIGINAL_RECORD></ORIGINAL_RECORD>
					</RECORD>
				</RECORDS>
			</COMMAND>
			---
			
			*JSON template*
			--- Code
			{ "NAME" : "DELETE", "COMMAND" : 
				{
					"OPTIMISTIC_LOCK" : "False" ,
					"RECOVER_RECORD_ID_TYPE" : "NONE" ,
					"CUSTOM_VARS" : "" ,
					"INPUT_FORMAT" : "JSON" ,
					"OUTPUT_FORMAT" : "JSON" ,
					"FILE_NAME" : "" ,
					"RECORDS": [
					{ 
						"LKITEMID": "",
						"ORIGINAL_RECORD": ""
					},
					{ 
						"LKITEMID": "",
						"ORIGINAL_RECORD": ""
					}
					]
				}
			}			---
			
	Delete Template for recovery deleted item ID type Linkar::

		*XML template*
			--- Code
			<COMMAND NAME="DELETE">
				<OPTIMISTIC_LOCK>False</OPTIMISTIC_LOCK>
				<RECOVER_RECORD_ID_TYPE>LINKAR</RECOVER_RECORD_ID_TYPE>
				<RECOVER_RECORD_ID_PREFIX></RECOVER_RECORD_ID_PREFIX>
				<RECOVER_RECORD_ID_SEPARATOR></RECOVER_RECORD_ID_SEPARATOR>
				<CUSTOM_VARS></CUSTOM_VARS>
				<INPUT_FORMAT>XML</INPUT_FORMAT>
				<OUTPUT_FORMAT>XML</OUTPUT_FORMAT>
				<FILE_NAME></FILE_NAME>
				<RECORDS>
					<RECORD>
						<LKITEMID></LKITEMID>
						<ORIGINAL_RECORD></ORIGINAL_RECORD>
					</RECORD>
				</RECORDS>
			</COMMAND>
			---
	
		*JSON template*
			--- Code
			"NAME" : "DELETE", "COMMAND" : 
				{
					"OPTIMISTIC_LOCK" : "False" ,
					"RECOVER_RECORD_ID_TYPE" : "LINKAR" ,
					"RECOVER_RECORD_ID_PREFIX" : "" ,
					"RECOVER_RECORD_ID_SEPARATOR" : "" ,
					"CUSTOM_VARS" : "" ,
					"INPUT_FORMAT" : "JSON" ,
					"OUTPUT_FORMAT" : "JSON" ,
					"FILE_NAME" : "" ,
					"RECORDS": [
					{ 
						"LKITEMID": "",
						"ORIGINAL_RECORD": ""
					},
					{ 
						"LKITEMID": "",
						"ORIGINAL_RECORD": ""
					}
					]
				}
						---
	
	Delete Template for recovery deleted item ID type Custom::
		
		*XML template*
			--- Code
			<COMMAND NAME="DELETE">
				<OPTIMISTIC_LOCK>False</OPTIMISTIC_LOCK>
				<RECOVER_RECORD_ID_TYPE>CUSTOM</RECOVER_RECORD_ID_TYPE>
				<CUSTOM_VARS></CUSTOM_VARS>
				<INPUT_FORMAT>XML</INPUT_FORMAT>
				<OUTPUT_FORMAT>XML</OUTPUT_FORMAT>
				<FILE_NAME></FILE_NAME>
				<RECORDS>
					<RECORD>
						<LKITEMID></LKITEMID>
						<ORIGINAL_RECORD></ORIGINAL_RECORD>
					</RECORD>
				</RECORDS>
			</COMMAND>
			---
		
		*JSON template*
			--- Code
			"NAME" : "DELETE", "COMMAND" : 
				{
					"OPTIMISTIC_LOCK" : "False" ,
					"RECOVER_RECORD_ID_TYPE" : "CUSTOM" ,
					"CUSTOM_VARS" : "" ,
					"INPUT_FORMAT" : "JSON" ,
					"OUTPUT_FORMAT" : "JSON" ,
					"FILE_NAME" : "" ,
					"RECORDS": [
					{ 
						"LKITEMID": "",
						"ORIGINAL_RECORD": ""
					},
					{ 
						"LKITEMID": "",
						"ORIGINAL_RECORD": ""
					}
					]
				}
			---

	Delete Template for NOT recovery deleted item ID with MV data::

		*XML template*
			--- Code
			<COMMAND NAME="DELETE">
				<OPTIMISTIC_LOCK>False</OPTIMISTIC_LOCK>
				<RECOVER_RECORD_ID_TYPE>NONE</RECOVER_RECORD_ID_TYPE>
				<CUSTOM_VARS></CUSTOM_VARS>
				<INPUT_FORMAT>MV</INPUT_FORMAT>
				<OUTPUT_FORMAT>MV</OUTPUT_FORMAT>
				<FILE_NAME></FILE_NAME>
				<RECORDS></RECORDS>
			</COMMAND>
			---

		*JSON template*
			--- Code
			{ "NAME" : "DELETE", "COMMAND" : 
				{
					"OPTIMISTIC_LOCK" : "False" ,
					"RECOVER_RECORD_ID_TYPE" : "NONE" ,
					"CUSTOM_VARS" : "" ,
					"INPUT_FORMAT" : "MV" ,
					"OUTPUT_FORMAT" : "MV" ,
					"FILE_NAME" : "" ,
					"RECORDS": ""
				}
			}			
			---

	Delete Template for recovery deleted item ID type Linkar with MV data::

		*XML template*
			--- Code
			<COMMAND NAME="DELETE">
				<OPTIMISTIC_LOCK>False</OPTIMISTIC_LOCK>
				<RECOVER_RECORD_ID_TYPE>LINKAR</RECOVER_RECORD_ID_TYPE>
				<RECOVER_RECORD_ID_PREFIX></RECOVER_RECORD_ID_PREFIX>
				<RECOVER_RECORD_ID_SEPARATOR></RECOVER_RECORD_ID_SEPARATOR>
				<CUSTOM_VARS></CUSTOM_VARS>
				<INPUT_FORMAT>MV</INPUT_FORMAT>
				<OUTPUT_FORMAT>MV</OUTPUT_FORMAT>
				<FILE_NAME></FILE_NAME>
				<RECORDS></RECORDS>
			</COMMAND>
			---

		*JSON template*
			--- Code
			{ "NAME" : "DELETE", "COMMAND" : 
				{
					"OPTIMISTIC_LOCK" : "False" ,
					"RECOVER_RECORD_ID_TYPE" : "LINKAR" ,
					"RECOVER_RECORD_ID_PREFIX" : "" ,
					"RECOVER_RECORD_ID_SEPARATOR" : "" ,
					"CUSTOM_VARS" : "" ,
					"INPUT_FORMAT" : "MV" ,
					"OUTPUT_FORMAT" : "MV" ,
					"FILE_NAME" : "" ,
					"RECORDS": ""
				}
			}
			---

	Delete Template for recovery deleted item ID type Custom with MV data::

		*XML template*
			--- Code
			<COMMAND NAME="DELETE">
				<OPTIMISTIC_LOCK>False</OPTIMISTIC_LOCK>
				<RECOVER_RECORD_ID_TYPE>CUSTOM</RECOVER_RECORD_ID_TYPE>
				<CUSTOM_VARS></CUSTOM_VARS>
				<INPUT_FORMAT>MV</INPUT_FORMAT>
				<OUTPUT_FORMAT>MV</OUTPUT_FORMAT>
				<FILE_NAME></FILE_NAME>
				<RECORDS></RECORDS>
			</COMMAND>
			---

		*JSON template*
			--- Code
			{ "NAME" : "DELETE", "COMMAND" : 
				{
					"OPTIMISTIC_LOCK" : "False" ,
					"RECOVER_RECORD_ID_TYPE" : "CUSTOM" ,
					"CUSTOM_VARS" : "" ,
					"INPUT_FORMAT" : "MV" ,
					"OUTPUT_FORMAT" : "MV" ,
					"FILE_NAME" : "" ,
					"RECORDS": ""
				}
			}
			---

Topic: Dictionaries Template

	*XML template*
	--- Code
	<COMMAND NAME="DICTIONARIES">
		<FILE_NAME></FILE_NAME>
		<CUSTOM_VARS></CUSTOM_VARS>
		<OUTPUT_FORMAT>MV</OUTPUT_FORMAT>
	</COMMAND>
	---
	
	*JSON template*
	--- Code
	{ "NAME" : "DICTIONARIES", "COMMAND" : 
		{ 
			"FILE_NAME" : "" ,
			"CUSTOM_VARS" : "" ,
			"OUTPUT_FORMAT" : "MV"
		}
	}	
	---

Topic: Execute Template

	*XML template*
	--- Code
	<COMMAND NAME="EXECUTE">
		<STATEMENT></STATEMENT>
		<CUSTOM_VARS></CUSTOM_VARS>
		<OUTPUT_FORMAT>MV</OUTPUT_FORMAT>
	</COMMAND>	
	---
	
	*JSON template*
	--- Code
	{ "NAME" : "EXECUTE", "COMMAND" : 
		{ 
			"STATEMENT" : "" ,
			"CUSTOM_VARS" : "" ,
			"OUTPUT_FORMAT" : "MV"
		}
	}
	---

Topic: Format Template

	*XML template*
	--- Code
	<COMMAND NAME="FORMAT">
		<FORMAT_SPEC></FORMAT_SPEC>
		<EXPRESSIONS></EXPRESSIONS>
		<CUSTOM_VARS></CUSTOM_VARS>
		<OUTPUT_FORMAT>MV</OUTPUT_FORMAT>
	</COMMAND>
	---
	
	*JSON template*
	--- Code
	{ "NAME" : "FORMAT", "COMMAND" : 
		{
			"FORMAT_SPEC" : "" ,
			"EXPRESSIONS" : "" ,
			"CUSTOM_VARS" : "" ,
			"OUTPUT_FORMAT" : "MV"
		}
	}
	---

Topic: GetTable Template

	GetTable Template for Schema type LKSCHEMAS
	
		*XML template*
		--- Code
		<COMMAND NAME="GETTABLE" SCHEMATYPE="LKSCHEMAS">
			<USEPROPERTYNAMES>False</USEPROPERTYNAMES>
			<ROWPROPERTIES>False</ROWPROPERTIES>
			<ONLYVISIBLES>False</ONLYVISIBLES>
			<ROWHEADERS>MAINLABEL</ROWHEADERS>
			<REPEATVALUES>False</REPEATVALUES>
			<APPLYCONVERSION>False</APPLYCONVERSION>    
			<APPLYFORMAT>False</APPLYFORMAT>
			<CALCULATED>False</CALCULATED>    
			<PAGINATION>False</PAGINATION>
			<PAGE_NUMBER>1</PAGE_NUMBER>
			<RECORDS_FOR_PAGE>10</RECORDS_FOR_PAGE>
			<CUSTOM_VARS></CUSTOM_VARS>
			<FILE_NAME></FILE_NAME>
			<SELECT_CLAUSE></SELECT_CLAUSE>
			<SORT_CLAUSE></SORT_CLAUSE>
			<DICT_CLAUSE></DICT_CLAUSE>
		</COMMAND>		
		---
		
		*JSON template*
		--- Code
		{ "NAME" : "GETTABLE", "SCHEMATYPE" : "LKSCHEMAS", "COMMAND" :
			{ 
				"USEPROPERTYNAMES" : "False" ,
				"ROWPROPERTIES" : "False" ,
				"ONLYVISIBLES" : "False" ,
				"ROWHEADERS" : "MAINLABEL" ,
				"REPEATVALUES" : "False" ,
				"APPLYCONVERSION" : "False" ,
				"APPLYFORMAT" : "False" ,
				"CALCULATED" : "False" ,                
				"PAGINATION" : "False" ,
				"PAGE_NUMBER" : "1" ,
				"RECORDS_FOR_PAGE" : "10" ,
				"CUSTOM_VARS" : "" ,
				"FILE_NAME" : "" ,
				"SELECT_CLAUSE" : "" ,
				"SORT_CLAUSE" : "", 
				"DICT_CLAUSE" : ""
			}
		}		
		---

	GetTable Template for Schema type SQLMODE
	
		*XML template*
		--- Code
		<COMMAND NAME="GETTABLE" SCHEMATYPE="SQLMODE">                
			<ONLYVISIBLES>False</ONLYVISIBLES>                
			<APPLYCONVERSION>False</APPLYCONVERSION>                
			<APPLYFORMAT>False</APPLYFORMAT>                
			<CALCULATED>False</CALCULATED>                
			<PAGINATION>False</PAGINATION>                
			<PAGE_NUMBER>1</PAGE_NUMBER>                
			<RECORDS_FOR_PAGE>10</RECORDS_FOR_PAGE>                
			<CUSTOM_VARS></CUSTOM_VARS>                
			<FILE_NAME></FILE_NAME>                
			<SELECT_CLAUSE></SELECT_CLAUSE>                
			<SORT_CLAUSE></SORT_CLAUSE>                
			<DICT_CLAUSE></DICT_CLAUSE>                
		</COMMAND>		
		---
		
		*JSON template*
		--- Code
		{ "NAME" : "GETTABLE", "SCHEMATYPE" : "SQLMODE", "COMMAND" :
			{ 
				"ONLYVISIBLES" : "False" ,
				"APPLYCONVERSION" : "False" ,
				"APPLYFORMAT" : "False" ,
				"CALCULATED" : "False" ,                                
				"PAGINATION" : "False" ,
				"PAGE_NUMBER" : "1" ,
				"RECORDS_FOR_PAGE" : "10" ,
				"CUSTOM_VARS" : "" ,
				"FILE_NAME" : "" ,
				"SELECT_CLAUSE" : "" ,
				"SORT_CLAUSE" : "", 
				"DICT_CLAUSE" : ""
			}
		}		
		---

	GetTable Template for Schema type DICTIONARIES
	
		*XML template*
		--- Code
		<COMMAND NAME="GETTABLE" SCHEMATYPE="DICTIONARIES">
			<ROWHEADERS>MAINLABEL</ROWHEADERS>
			<REPEATVALUES>False</REPEATVALUES>
			<APPLYCONVERSION>False</APPLYCONVERSION>
			<APPLYFORMAT>False</APPLYFORMAT>
			<CALCULATED>False</CALCULATED>              
			<PAGINATION>False</PAGINATION>
			<PAGE_NUMBER>1</PAGE_NUMBER>
			<RECORDS_FOR_PAGE>10</RECORDS_FOR_PAGE>
			<CUSTOM_VARS></CUSTOM_VARS>
			<FILE_NAME></FILE_NAME>
			<SELECT_CLAUSE></SELECT_CLAUSE>
			<SORT_CLAUSE></SORT_CLAUSE>
			<DICT_CLAUSE></DICT_CLAUSE>
		</COMMAND>
		---
		
		*JSON template*
		--- Code
		{ "NAME" : "GETTABLE", "SCHEMATYPE" : "DICTIONARIES", "COMMAND" :
				{ 
					"ROWHEADERS" : "MAINLABEL" ,
					"REPEATVALUES" : "False" ,
					"APPLYCONVERSION" : "False" ,
					"APPLYFORMAT" : "False" ,
					"CALCULATED" : "False" ,                                
					"PAGINATION" : "False" ,
					"PAGE_NUMBER" : "1" ,
					"RECORDS_FOR_PAGE" : "10" ,
					"CUSTOM_VARS" : "" ,
					"FILE_NAME" : "" ,
					"SELECT_CLAUSE" : "" ,
					"SORT_CLAUSE" : "", 
					"DICT_CLAUSE" : ""
				}
		}		
		---
	
	GetTable Template for Schema type NONE
	
		*XML template*
		--- Code
		<COMMAND NAME="GETTABLE" SCHEMATYPE="NONE">
			<ROWHEADERS>MAINLABEL</ROWHEADERS>
			<REPEATVALUES>False</REPEATVALUES>
			<APPLYCONVERSION>False</APPLYCONVERSION>
			<APPLYFORMAT>False</APPLYFORMAT>
			<CALCULATED>False</CALCULATED>              
			<PAGINATION>False</PAGINATION>
			<PAGE_NUMBER>1</PAGE_NUMBER>
			<RECORDS_FOR_PAGE>10</RECORDS_FOR_PAGE>
			<CUSTOM_VARS></CUSTOM_VARS>
			<FILE_NAME></FILE_NAME>
			<SELECT_CLAUSE></SELECT_CLAUSE>
			<SORT_CLAUSE></SORT_CLAUSE>
			<DICT_CLAUSE></DICT_CLAUSE>
		</COMMAND>
		---
		
		*JSON template*
		--- Code
		{ "NAME" : "GETTABLE", "SCHEMATYPE" : "NONE", "COMMAND" :
			{ 
				"ROWHEADERS" : "MAINLABEL" ,
				"REPEATVALUES" : "False" ,
				"APPLYCONVERSION" : "False" ,
				"APPLYFORMAT" : "False" ,
				"CALCULATED" : "False" ,                                
				"PAGINATION" : "False" ,
				"PAGE_NUMBER" : "1" ,
				"RECORDS_FOR_PAGE" : "10" ,
				"CUSTOM_VARS" : "" ,
				"FILE_NAME" : "" ,
				"SELECT_CLAUSE" : "" ,
				"SORT_CLAUSE" : "", 
				"DICT_CLAUSE" : ""
			}
		}		
		---
	
Topic: GetVersion Template

	*XML template*
	--- Code
	<COMMAND NAME="GETVERSION">
		<CUSTOM_VARS></CUSTOM_VARS>
		<OUTPUT_FORMAT>MV</OUTPUT_FORMAT>
	</COMMAND>
	---
	
	*JSON template*
	--- Code
	{ "NAME" : "GETVERSION", "COMMAND" : 
		{ 
			"CUSTOM_VARS" : "" ,
			"OUTPUT_FORMAT" : "MV"
		}
	}	
	---
	
Topic: LkProperties Template

	LkProperties Template for Schema type LKSCHEMAS
	
		*XML template*
		--- Code
		<COMMAND NAME="LKPROPERTIES" SCHEMATYPE="LKSCHEMAS">
			<USEPROPERTYNAMES>False</USEPROPERTYNAMES>
			<ROWPROPERTIES>False</ROWPROPERTIES>
			<ONLYVISIBLES>False</ONLYVISIBLES>
			<ROWHEADERS>MAINLABEL</ROWHEADERS>
			<PAGINATION>False</PAGINATION>
			<PAGE_NUMBER>1</PAGE_NUMBER>
			<RECORDS_FOR_PAGE>10</RECORDS_FOR_PAGE>
			<CUSTOM_VARS></CUSTOM_VARS>
			<OUTPUT_FORMAT>TABLE</OUTPUT_FORMAT>
			<FILE_NAME></FILE_NAME>
		</COMMAND>
		---
		
		*JSON template*
		--- Code
		{ "NAME" : "LKPROPERTIES",  "SCHEMATYPE" : "LKSCHEMAS", "COMMAND" :
			{ 
				"USEPROPERTYNAMES" : "False" ,
				"ROWPROPERTIES" : "False" ,
				"ONLYVISIBLES" : "False" ,
				"ROWHEADERS" : "MAINLABEL" ,
				"PAGINATION" : "False" ,
				"PAGE_NUMBER" : "1" ,
				"RECORDS_FOR_PAGE" : "10" ,
				"CUSTOM_VARS" : "" ,
				"OUTPUT_FORMAT" : "TABLE" ,                
				"FILE_NAME" : "" 
			}
		}		
		---

	LkProperties Template for Schema type SQLMODE
	
		*XML template*
		--- Code
		<COMMAND NAME="LKPROPERTIES" SCHEMATYPE="SQLMODE">
			<ONLYVISIBLES>False</ONLYVISIBLES>
			<PAGINATION>False</PAGINATION>
			<PAGE_NUMBER>1</PAGE_NUMBER>
			<RECORDS_FOR_PAGE>10</RECORDS_FOR_PAGE>
			<CUSTOM_VARS></CUSTOM_VARS>
			<OUTPUT_FORMAT>TABLE</OUTPUT_FORMAT>
			<FILE_NAME></FILE_NAME>
		</COMMAND>
		---
		
		*JSON template*
		--- Code
		{ "NAME" : "LKPROPERTIES", "SCHEMATYPE" : "SQLMODE", "COMMAND" :
			{ 
				"ONLYVISIBLES" : "False" ,
				"PAGINATION" : "False" ,
				"PAGE_NUMBER" : "1" ,
				"RECORDS_FOR_PAGE" : "10" ,
				"CUSTOM_VARS" : "" ,
				"OUTPUT_FORMAT" : "TABLE" ,                                
				"FILE_NAME" : "" 
			}
		}		
		---

	LkProperties Template for Schema type DICTIONARIES
	
		*XML template*
		--- Code
		<COMMAND NAME="LKPROPERTIES" SCHEMATYPE="DICTIONARIES">
			<ROWHEADERS>MAINLABEL</ROWHEADERS>
			<PAGINATION>False</PAGINATION>
			<PAGE_NUMBER>1</PAGE_NUMBER>
			<RECORDS_FOR_PAGE>10</RECORDS_FOR_PAGE>
			<CUSTOM_VARS></CUSTOM_VARS>
			<OUTPUT_FORMAT>TABLE</OUTPUT_FORMAT>
			<FILE_NAME></FILE_NAME>
		</COMMAND>
		---
		
		*JSON template*
		--- Code
		{ "NAME" : "LKPROPERTIES",  "SCHEMATYPE" : "DICTIONARIES", "COMMAND" :
			{ 
				"ROWHEADERS" : "MAINLABEL" ,
				"PAGINATION" : "False" ,
				"PAGE_NUMBER" : "1" ,
				"RECORDS_FOR_PAGE" : "10" ,
				"CUSTOM_VARS" : "" ,
				"OUTPUT_FORMAT" : "TABLE" ,
				"FILE_NAME" : "" 
			}
		}
		---

Topic: LkSchemas Template

	LkSchemas Template for Schema type LKSCHEMAS
	
		*XML template*
		--- Code
		<COMMAND NAME="LKSCHEMAS" SCHEMATYPE="LKSCHEMAS">
			<ROWPROPERTIES>False</ROWPROPERTIES>
			<ONLYVISIBLES>False</ONLYVISIBLES>
			<ROWHEADERS>MAINLABEL</ROWHEADERS>
			<PAGINATION>False</PAGINATION>
			<PAGE_NUMBER>1</PAGE_NUMBER>
			<RECORDS_FOR_PAGE>10</RECORDS_FOR_PAGE>
			<CUSTOM_VARS></CUSTOM_VARS>
			<OUTPUT_FORMAT>TABLE</OUTPUT_FORMAT>
		</COMMAND>
		---
		
		*JSON template*
		--- Code
		{ "NAME" : "LKSCHEMAS", "SCHEMATYPE" : "LKSCHEMAS" , "COMMAND" :
				{ 
					"ROWPROPERTIES" : "False" ,
					"ONLYVISIBLES" : "False" ,
					"ROWHEADERS" : "MAINLABEL" ,
					"PAGINATION" : "False" ,
					"PAGE_NUMBER" : "1" ,
					"RECORDS_FOR_PAGE" : "10" ,
					"CUSTOM_VARS" : "" ,
					"OUTPUT_FORMAT" : "TABLE"
				}
		}		
		---

	LkSchemas Template for Schema type SQLMODE
	
		*XML template*
		--- Code
		<COMMAND NAME="LKSCHEMAS" SCHEMATYPE="SQLMODE">
			<ONLYVISIBLES>False</ONLYVISIBLES>
			<PAGINATION>False</PAGINATION>
			<PAGE_NUMBER>1</PAGE_NUMBER>
			<RECORDS_FOR_PAGE>10</RECORDS_FOR_PAGE>
			<CUSTOM_VARS></CUSTOM_VARS>
			<OUTPUT_FORMAT>TABLE</OUTPUT_FORMAT>
		</COMMAND>
		---
		
		*JSON template*
		--- Code
		{ "NAME" : "LKSCHEMAS", "SCHEMATYPE" : "SQLMODE", "COMMAND" :
			{ 
				"ONLYVISIBLES" : "False" ,
				"PAGINATION" : "False" ,
				"PAGE_NUMBER" : "1" ,
				"RECORDS_FOR_PAGE" : "10" ,
				"CUSTOM_VARS" : "" ,
				"OUTPUT_FORMAT" : "TABLE"
			}
		}		
		---

	LkSchemas Template for Schema type DICTIONARIES
	
		*XML template*
		--- Code
		<COMMAND NAME="LKSCHEMAS" SCHEMATYPE="DICTIONARIES">
			<ROWHEADERS>MAINLABEL</ROWHEADERS>
			<PAGINATION>False</PAGINATION>
			<PAGE_NUMBER>1</PAGE_NUMBER>
			<RECORDS_FOR_PAGE>10</RECORDS_FOR_PAGE>
			<CUSTOM_VARS></CUSTOM_VARS>
			<OUTPUT_FORMAT>TABLE</OUTPUT_FORMAT>
		</COMMAND>
		---
		
		*JSON template*
		--- Code
		{ "NAME" : "LKSCHEMAS",  "SCHEMATYPE": "DICTIONARIES", "COMMAND" :
			{ 
				"ROWHEADERS" : "MAINLABEL" ,
				"PAGINATION" : "False" ,
				"PAGE_NUMBER" : "1" ,
				"RECORDS_FOR_PAGE" : "10" ,
				"CUSTOM_VARS" : "" ,
				"OUTPUT_FORMAT" : "TABLE"
			}
		}		
		---

Topic: New Template

	New Template for NOT auto item ID generation::

		*XML template*
		--- Code
		<COMMAND NAME="NEW">
			<READ_AFTER>False</READ_AFTER>
			<CALCULATED>False</CALCULATED>
			<CONVERSION>False</CONVERSION>
			<FORMAT_SPEC>False</FORMAT_SPEC>
			<ORIGINAL_RECORDS>False</ORIGINAL_RECORDS>
			<NEW_RECORD_ID_TYPE>NONE</NEW_RECORD_ID_TYPE>
			<CUSTOM_VARS></CUSTOM_VARS>
			<INPUT_FORMAT>XML</INPUT_FORMAT>
			<OUTPUT_FORMAT>XML</OUTPUT_FORMAT>
			<FILE_NAME></FILE_NAME>
			<RECORDS>
				<RECORD>
					<LKITEMID></LKITEMID>
				</RECORD>
			</RECORDS>
		</COMMAND>
		---
		
		*JSON template*
		--- Code
		{ "NAME" : "NEW", "COMMAND" : 
			{
				"READ_AFTER" : "False" ,
				"CALCULATED" : "False" ,
				"CONVERSION" : "False" ,
				"FORMAT_SPEC" : "False" ,
				"ORIGINAL_RECORDS" : "False" ,
				"NEW_RECORD_ID_TYPE" : "NONE" ,
				"CUSTOM_VARS" : "" ,
				"INPUT_FORMAT" : "JSON" ,
				"OUTPUT_FORMAT" : "JSON" ,
				"FILE_NAME" : "" ,
				"RECORDS":
				[
				  {
					"LKITEMID": ""
				  }
				] 
			}
		}
		---
	
	New Template for generation of item ID type Linkar::

		*XML template*
		--- Code
		<COMMAND NAME="NEW">
			<READ_AFTER>False</READ_AFTER>
			<CALCULATED>False</CALCULATED>
			<CONVERSION>False</CONVERSION>
			<FORMAT_SPEC>False</FORMAT_SPEC>
			<ORIGINAL_RECORDS>False</ORIGINAL_RECORDS>
			<NEW_RECORD_ID_TYPE>LINKAR</NEW_RECORD_ID_TYPE>
			<NEW_RECORD_ID_FORMAT_SPEC></NEW_RECORD_ID_FORMAT_SPEC>
			<NEW_RECORD_ID_PREFIX></NEW_RECORD_ID_PREFIX>
			<NEW_RECORD_ID_SEPARATOR></NEW_RECORD_ID_SEPARATOR>
			<CUSTOM_VARS></CUSTOM_VARS>
			<INPUT_FORMAT>XML</INPUT_FORMAT>
			<OUTPUT_FORMAT>XML</OUTPUT_FORMAT>
			<FILE_NAME></FILE_NAME>
			<RECORDS>
				<RECORD>
					<LKITEMID></LKITEMID>
				</RECORD>
			</RECORDS>
		</COMMAND>
		---
		
		*JSON template*
		--- Code
		{ "NAME" : "NEW", "COMMAND" : 
			{
				"READ_AFTER" : "False" ,
				"CALCULATED" : "False" ,
				"CONVERSION" : "False" ,
				"FORMAT_SPEC" : "False" ,
				"ORIGINAL_RECORDS" : "False" ,
				"NEW_RECORD_ID_TYPE" : "LINKAR" ,
				"NEW_RECORD_ID_FORMAT_SPEC" : "" ,
				"NEW_RECORD_ID_PREFIX" : "" ,
				"NEW_RECORD_ID_SEPARATOR" : "" ,
				"CUSTOM_VARS" : "" ,
				"INPUT_FORMAT" : "JSON" ,
				"OUTPUT_FORMAT" : "JSON" ,
				"FILE_NAME" : "" ,
				"RECORDS":
				[
				  {
					"LKITEMID": ""
				  }
				]  
			}
		}
		---
	
	New Template for generation of item ID type Custom::

		*XML template*
		<COMMAND NAME="NEW">
			<READ_AFTER>False</READ_AFTER>
			<CALCULATED>False</CALCULATED>
			<CONVERSION>False</CONVERSION>
			<FORMAT_SPEC>False</FORMAT_SPEC>
			<ORIGINAL_RECORDS>False</ORIGINAL_RECORDS>
			<NEW_RECORD_ID_TYPE>CUSTOM</NEW_RECORD_ID_TYPE>
			<CUSTOM_VARS></CUSTOM_VARS>
			<INPUT_FORMAT>XML</INPUT_FORMAT>
			<OUTPUT_FORMAT>XML</OUTPUT_FORMAT>
			<FILE_NAME></FILE_NAME>
			<RECORDS>
				<RECORD>
					<LKITEMID></LKITEMID>
				</RECORD>
			</RECORDS>
		</COMMAND>	
		---
		
		*JSON template*
		--- Code
		{ "NAME" : "NEW", "COMMAND" : 
			{
				"READ_AFTER" : "False" ,
				"CALCULATED" : "False" ,
				"CONVERSION" : "False" ,
				"FORMAT_SPEC" : "False" ,
				"ORIGINAL_RECORDS" : "False" ,
				"NEW_RECORD_ID_TYPE" : "CUSTOM" ,
				"CUSTOM_VARS" : "" ,
				"INPUT_FORMAT" : "JSON" ,
				"OUTPUT_FORMAT" : "JSON" ,
				"FILE_NAME" : "" ,
				"RECORDS":
				[
				  {
					"LKITEMID": ""
				  }
				] 
			}
		}
		---
	
	New Template for generation of item ID type Random::

		*XML template*
		--- Code
		<COMMAND NAME="NEW">
			<READ_AFTER>False</READ_AFTER>
			<CALCULATED>False</CALCULATED>
			<CONVERSION>False</CONVERSION>
			<FORMAT_SPEC>False</FORMAT_SPEC>
			<ORIGINAL_RECORDS>False</ORIGINAL_RECORDS>
			<NEW_RECORD_ID_TYPE>RANDOM</NEW_RECORD_ID_TYPE>
			<NEW_RECORD_ID_LENGTH>0</NEW_RECORD_ID_LENGTH>
			<NEW_RECORD_ID_NUMERIC>False</NEW_RECORD_ID_NUMERIC>
			<CUSTOM_VARS></CUSTOM_VARS>
			<INPUT_FORMAT>XML</INPUT_FORMAT>
			<OUTPUT_FORMAT>XML</OUTPUT_FORMAT>
			<FILE_NAME></FILE_NAME>
			<RECORDS>
				<RECORD>
					<LKITEMID></LKITEMID>
				</RECORD>
			</RECORDS>
		</COMMAND>
		---
		
		*JSON template*
		--- Code
		{ "NAME" : "NEW", "COMMAND" : 
			{
				"READ_AFTER" : "False" ,
				"CALCULATED" : "False" ,
				"CONVERSION" : "False" ,
				"FORMAT_SPEC" : "False" ,
				"ORIGINAL_RECORDS" : "False" ,
				"NEW_RECORD_ID_TYPE" : "RANDOM" ,
				"NEW_RECORD_ID_LENGTH" : "0" ,
				"NEW_RECORD_ID_NUMERIC" : "False" ,
				"CUSTOM_VARS" : "" ,
				"INPUT_FORMAT" : "JSON" ,
				"OUTPUT_FORMAT" : "JSON" ,
				"FILE_NAME" : "" ,
				"RECORDS":
				[
				  {
					"LKITEMID": ""
				  }
				] 
			}
		}	
		---

	New Template for NOT auto item ID generation with MV data::

		*XML template*
		--- Code
		<COMMAND NAME="NEW">
			<READ_AFTER>False</READ_AFTER>
			<CALCULATED>False</CALCULATED>
			<CONVERSION>False</CONVERSION>
			<FORMAT_SPEC>False</FORMAT_SPEC>
			<ORIGINAL_RECORDS>False</ORIGINAL_RECORDS>
			<NEW_RECORD_ID_TYPE>NONE</NEW_RECORD_ID_TYPE>
			<CUSTOM_VARS></CUSTOM_VARS>
			<INPUT_FORMAT>MV</INPUT_FORMAT>
			<OUTPUT_FORMAT>MV</OUTPUT_FORMAT>
			<FILE_NAME></FILE_NAME>
			<RECORDS></RECORDS>
		</COMMAND>
		---

		*JSON template*
		--- Code
		{ "NAME" : "NEW", "COMMAND" : 
			{
				"READ_AFTER" : "False" ,
				"CALCULATED" : "False" ,
				"CONVERSION" : "False" ,
				"FORMAT_SPEC" : "False" ,
				"ORIGINAL_RECORDS" : "False" ,
				"NEW_RECORD_ID_TYPE" : "NONE" ,
				"CUSTOM_VARS" : "" ,
				"INPUT_FORMAT" : "MV" ,
				"OUTPUT_FORMAT" : "MV" ,
				"FILE_NAME" : "" ,
				"RECORDS": "" 
			}
		}
		---
	
	New Template for generation of item ID type Linkar with MV data::

		*XML template*
		--- Code
		<COMMAND NAME="NEW">
			<READ_AFTER>False</READ_AFTER>
			<CALCULATED>False</CALCULATED>
			<CONVERSION>False</CONVERSION>
			<FORMAT_SPEC>False</FORMAT_SPEC>
			<ORIGINAL_RECORDS>False</ORIGINAL_RECORDS>
			<NEW_RECORD_ID_TYPE>LINKAR</NEW_RECORD_ID_TYPE>
			<NEW_RECORD_ID_FORMAT_SPEC></NEW_RECORD_ID_FORMAT_SPEC>
			<NEW_RECORD_ID_PREFIX></NEW_RECORD_ID_PREFIX>
			<NEW_RECORD_ID_SEPARATOR></NEW_RECORD_ID_SEPARATOR>
			<CUSTOM_VARS></CUSTOM_VARS>
			<INPUT_FORMAT>MV</INPUT_FORMAT>
			<OUTPUT_FORMAT>MV</OUTPUT_FORMAT>
			<FILE_NAME></FILE_NAME>
			<RECORDS></RECORDS>
		</COMMAND>
		---

		*JSON template*
		--- Code
		{ "NAME" : "NEW", "COMMAND" : 
			{
				"READ_AFTER" : "False" ,
				"CALCULATED" : "False" ,
				"CONVERSION" : "False" ,
				"FORMAT_SPEC" : "False" ,
				"ORIGINAL_RECORDS" : "False" ,
				"NEW_RECORD_ID_TYPE" : "LINKAR" ,
				"NEW_RECORD_ID_FORMAT_SPEC" : "" ,
				"NEW_RECORD_ID_PREFIX" : "" ,
				"NEW_RECORD_ID_SEPARATOR" : "" ,
				"CUSTOM_VARS" : "" ,
				"INPUT_FORMAT" : "MV" ,
				"OUTPUT_FORMAT" : "MV" ,
				"FILE_NAME" : "" ,
				"RECORDS": ""  
			}
		}
		---

	New Template for generation of item ID type Custom with MV data::

		*XML template*
		--- Code
		<COMMAND NAME="NEW">
			<READ_AFTER>False</READ_AFTER>
			<CALCULATED>False</CALCULATED>
			<CONVERSION>False</CONVERSION>
			<FORMAT_SPEC>False</FORMAT_SPEC>
			<ORIGINAL_RECORDS>False</ORIGINAL_RECORDS>
			<NEW_RECORD_ID_TYPE>CUSTOM</NEW_RECORD_ID_TYPE>
			<CUSTOM_VARS></CUSTOM_VARS>
			<INPUT_FORMAT>MV</INPUT_FORMAT>
			<OUTPUT_FORMAT>MV</OUTPUT_FORMAT>
			<FILE_NAME></FILE_NAME>
			<RECORDS></RECORDS>
		</COMMAND>
		---

		*JSON template*
		--- Code
		{ "NAME" : "NEW", "COMMAND" : 
			{
				"READ_AFTER" : "False" ,
				"CALCULATED" : "False" ,
				"CONVERSION" : "False" ,
				"FORMAT_SPEC" : "False" ,
				"ORIGINAL_RECORDS" : "False" ,
				"NEW_RECORD_ID_TYPE" : "CUSTOM" ,
				"CUSTOM_VARS" : "" ,
				"INPUT_FORMAT" : "MV" ,
				"OUTPUT_FORMAT" : "MV" ,
				"FILE_NAME" : "" ,
				"RECORDS": ""
			}
		}
		---

	New Template for generation of item ID type Random::

		*XML template*
		--- Code
		<COMMAND NAME="NEW">
			<READ_AFTER>False</READ_AFTER>
			<CALCULATED>False</CALCULATED>
			<CONVERSION>False</CONVERSION>
			<FORMAT_SPEC>False</FORMAT_SPEC>
			<ORIGINAL_RECORDS>False</ORIGINAL_RECORDS>
			<NEW_RECORD_ID_TYPE>RANDOM</NEW_RECORD_ID_TYPE>
			<NEW_RECORD_ID_LENGTH>0</NEW_RECORD_ID_LENGTH>
			<NEW_RECORD_ID_NUMERIC>False</NEW_RECORD_ID_NUMERIC>
			<CUSTOM_VARS></CUSTOM_VARS>
			<INPUT_FORMAT>MV</INPUT_FORMAT>
			<OUTPUT_FORMAT>MV</OUTPUT_FORMAT>
			<FILE_NAME></FILE_NAME>
			<RECORDS></RECORDS>
		</COMMAND>		
		---

		*JSON template*
		--- Code
		{ "NAME" : "NEW", "COMMAND" : 
			{
				"READ_AFTER" : "False" ,
				"CALCULATED" : "False" ,
				"CONVERSION" : "False" ,
				"FORMAT_SPEC" : "False" ,
				"ORIGINAL_RECORDS" : "False" ,
				"NEW_RECORD_ID_TYPE" : "RANDOM" ,
				"NEW_RECORD_ID_LENGTH" : "0" ,
				"NEW_RECORD_ID_NUMERIC" : "False" ,
				"CUSTOM_VARS" : "" ,
				"INPUT_FORMAT" : "MV" ,
				"OUTPUT_FORMAT" : "MV" ,
				"FILE_NAME" : "" ,
				"RECORDS": "" 
			}
		}
		---

Topic: Read Template

	*XML template*
	--- Code
	<COMMAND NAME="READ">
		<CALCULATED>False</CALCULATED>
		<CONVERSION>False</CONVERSION>
		<FORMAT_SPEC>False</FORMAT_SPEC>
		<ORIGINAL_RECORDS>False</ORIGINAL_RECORDS>
		<CUSTOM_VARS></CUSTOM_VARS>
		<OUTPUT_FORMAT>XML</OUTPUT_FORMAT>
		<FILE_NAME></FILE_NAME>
		<DICT_CLAUSE></DICT_CLAUSE>
		<RECORDS>
			<RECORD>
				<LKITEMID></LKITEMID>
			</RECORD>
		</RECORDS>
	</COMMAND>
	---
	
	*JSON template*
	--- Code
	{ "NAME" : "READ", "COMMAND" : 
		{ 
			"CALCULATED" : "False" ,
			"CONVERSION" : "False" ,
			"FORMAT_SPEC" : "False" ,
			"ORIGINAL_RECORDS" : "False" ,
			"CUSTOM_VARS" : "" ,
			"OUTPUT_FORMAT" : "JSON" ,
			"FILE_NAME" : "" ,
			"DICT_CLAUSE" : "",
			"RECORDS" : 
			[ 
				{ "LKITEMID" : "" } 
			]
		}
	}
	---

	*XML template with MV*
	--- Code
	<COMMAND NAME="READ">
		<CALCULATED>False</CALCULATED>
		<CONVERSION>False</CONVERSION>
		<FORMAT_SPEC>False</FORMAT_SPEC>
		<ORIGINAL_RECORDS>False</ORIGINAL_RECORDS>
		<CUSTOM_VARS></CUSTOM_VARS>
		<OUTPUT_FORMAT>MV</OUTPUT_FORMAT>
		<FILE_NAME></FILE_NAME>
		<DICT_CLAUSE></DICT_CLAUSE>
		<RECORDS></RECORDS>
	</COMMAND>
	---

	*JSON template with MV*
	--- Code
	{ "NAME" : "READ", "COMMAND" : 
		{ 
			"CALCULATED" : "False" ,
			"CONVERSION" : "False" ,
			"FORMAT_SPEC" : "False" ,
			"ORIGINAL_RECORDS" : "False" ,
			"CUSTOM_VARS" : "" ,
			"OUTPUT_FORMAT" : "MV" ,
			"FILE_NAME" : "" ,
			"DICT_CLAUSE" : "",
			"RECORDS": ""
		}
	}
	---
	
Topic: RunSubroutine Template

	*XML template*
	--- Code
	<COMMAND NAME="SUBROUTINE">
		<SUBROUTINE_NAME>SUB.DEMOLINKAR</SUBROUTINE_NAME>
		<NUMBER_OF_ARGUMENTS>3</NUMBER_OF_ARGUMENTS>
		<ARGUMENTS>
			<ARGUMENT></ARGUMENT>
			<ARGUMENT></ARGUMENT>
			<ARGUMENT></ARGUMENT>
		</ARGUMENTS>
		<CUSTOM_VARS></CUSTOM_VARS>
		<OUTPUT_FORMAT>MV</OUTPUT_FORMAT>
	</COMMAND>
	---
	
	*JSON template*
	--- Code
	{ "NAME" : "SUBROUTINE", "COMMAND" : 
		{ 
			"SUBROUTINE_NAME" : "SUB.DEMOLINKAR" ,
			"NUMBER_OF_ARGUMENTS" : "3" ,
			"ARGUMENTS" : 
			[
					{ "ARGUMENT" : "" } ,
					{ "ARGUMENT" : "" } ,
					{ "ARGUMENT" : "" } 
			] ,
			"CUSTOM_VARS" : "" ,
			"OUTPUT_FORMAT" : "MV"
		}
	}
	---
	

Topic: Select Template

	*XML template*
	--- Code
	<COMMAND NAME="SELECT">
		<CALCULATED>False</CALCULATED>
		<DICTIONARIES>False</DICTIONARIES>
		<CONVERSION>False</CONVERSION>
		<FORMAT_SPEC>False</FORMAT_SPEC>
		<ORIGINAL_RECORDS>False</ORIGINAL_RECORDS>
		<ONLY_RECORD_ID>False</ONLY_RECORD_ID>
		<PAGINATION>True</PAGINATION>
		<PAGE_NUMBER>1</PAGE_NUMBER>
		<RECORDS_FOR_PAGE>10</RECORDS_FOR_PAGE>
		<CUSTOM_VARS></CUSTOM_VARS>
		<OUTPUT_FORMAT>MV</OUTPUT_FORMAT>
		<FILE_NAME></FILE_NAME>
		<SELECT_CLAUSE></SELECT_CLAUSE>
		<SORT_CLAUSE></SORT_CLAUSE>
		<DICT_CLAUSE></DICT_CLAUSE>
		<PRESELECT_CLAUSE></PRESELECT_CLAUSE>
	</COMMAND>
	---
	
	*JSON template*
	--- Code
	{ "NAME" : "SELECT", "COMMAND" : 
		{ 
			"CALCULATED" : "False" ,
			"DICTIONARIES" : "False" ,
			"CONVERSION" : "False" ,
			"FORMAT_SPEC" : "False" ,
			"ORIGINAL_RECORDS" : "False" ,
			"ONLY_RECORD_ID" : "False" ,
			"PAGINATION" : "False" ,
			"PAGE_NUMBER" : "1" ,
			"RECORDS_FOR_PAGE" : "10" ,
			"CUSTOM_VARS" : "" ,
			"OUTPUT_FORMAT" : "MV" ,
			"FILE_NAME" : "" ,
			"SELECT_CLAUSE" : "" ,
			"SORT_CLAUSE" : "", 
			"DICT_CLAUSE" : "" ,
			"PRESELECT_CLAUSE" : ""
		}
	}	
	---
	
Topic: Update Template

	*XML template*
	--- Code
	<COMMAND NAME="UPDATE">
		<READ_AFTER>False</READ_AFTER>
		<CALCULATED>False</CALCULATED>
		<CONVERSION>False</CONVERSION>
		<FORMAT_SPEC>False</FORMAT_SPEC>
		<ORIGINAL_RECORDS>False</ORIGINAL_RECORDS>
		<OPTIMISTIC_LOCK>False</OPTIMISTIC_LOCK>
		<CUSTOM_VARS></CUSTOM_VARS>
		<INPUT_FORMAT>XML</INPUT_FORMAT>
		<OUTPUT_FORMAT>XML</OUTPUT_FORMAT>
		<FILE_NAME></FILE_NAME>
		<RECORDS>
			<RECORD>
				<LKITEMID></LKITEMID>
				<ORIGINAL_RECORD></ORIGINAL_RECORD>
			</RECORD>
		</RECORDS>
	</COMMAND>
	---
	
	*JSON template*
	--- Code
	{ "NAME" : "UPDATE", "COMMAND" : 
		{
			"READ_AFTER" : "False" ,
			"CALCULATED" : "False" ,
			"CONVERSION" : "False" ,
			"FORMAT_SPEC" : "False" ,
			"ORIGINAL_RECORDS" : "False" ,
			"OPTIMISTIC_LOCK" : "False" ,
			"CUSTOM_VARS" : "" ,
			"INPUT_FORMAT" : "JSON" ,
			"OUTPUT_FORMAT" : "JSON" ,
			"FILE_NAME" : "" ,
			"RECORDS":
				[
					{
						"LKITEMID": "",
						"ORIGINAL_RECORD": ""
					}
				]
		  } 
		}
	}
	---

	*XML template with MV data*
	--- Code
	<COMMAND NAME="UPDATE">
		<READ_AFTER>False</READ_AFTER>
		<CALCULATED>False</CALCULATED>
		<CONVERSION>False</CONVERSION>
		<FORMAT_SPEC>False</FORMAT_SPEC>
		<ORIGINAL_RECORDS>False</ORIGINAL_RECORDS>
		<OPTIMISTIC_LOCK>False</OPTIMISTIC_LOCK>
		<CUSTOM_VARS></CUSTOM_VARS>
		<INPUT_FORMAT>MV</INPUT_FORMAT>
		<OUTPUT_FORMAT>MV</OUTPUT_FORMAT>
		<FILE_NAME></FILE_NAME>
		<RECORDS></RECORDS>
	</COMMAND>
	---
	
	*JSON template with MV data*
	--- Code
	{ "NAME" : "UPDATE", "COMMAND" : 
		{
			"READ_AFTER" : "False" ,
			"CALCULATED" : "False" ,
			"CONVERSION" : "False" ,
			"FORMAT_SPEC" : "False" ,
			"ORIGINAL_RECORDS" : "False" ,
			"OPTIMISTIC_LOCK" : "False" ,
			"CUSTOM_VARS" : "" ,
			"INPUT_FORMAT" : "MV" ,
			"OUTPUT_FORMAT" : "MV" ,
			"FILE_NAME" : "" ,
			"RECORDS": ""
		  } 
		}
	}
	---
	
Topic: UpdatePartial Template

	*XML template*
	--- Code
	<COMMAND NAME="UPDATEPARTIAL">
		<READ_AFTER>False</READ_AFTER>
		<CALCULATED>False</CALCULATED>
		<CONVERSION>False</CONVERSION>
		<FORMAT_SPEC>False</FORMAT_SPEC>
		<ORIGINAL_RECORDS>False</ORIGINAL_RECORDS>
		<OPTIMISTIC_LOCK>False</OPTIMISTIC_LOCK>
		<CUSTOM_VARS></CUSTOM_VARS>
		<INPUT_FORMAT>XML</INPUT_FORMAT>
		<OUTPUT_FORMAT>XML</OUTPUT_FORMAT>
		<FILE_NAME></FILE_NAME>
		<RECORDS>
			<RECORD>
				<LKITEMID></LKITEMID>
				<ORIGINAL_RECORD></ORIGINAL_RECORD>
			</RECORD>
		</RECORDS>
	</COMMAND>
	---
	
	*JSON template*
	--- Code
	{ "NAME" : "UPDATEPARTIAL", "COMMAND" : 
		{
			"READ_AFTER" : "False" ,
			"CALCULATED" : "False" ,
			"CONVERSION" : "False" ,
			"FORMAT_SPEC" : "False" ,
			"ORIGINAL_RECORDS" : "False" ,
			"OPTIMISTIC_LOCK" : "False" ,
			"CUSTOM_VARS" : "" ,
			"INPUT_FORMAT" : "JSON" ,
			"OUTPUT_FORMAT" : "JSON" ,
			"FILE_NAME" : "" ,
			"RECORDS":
				[
					{
						"LKITEMID": "",
						"ORIGINAL_RECORD": ""
					}
				]
		  } 
		}
	}
	---
	